model User {
  uuid                  String             @id @default(uuid())
  email                 String             @unique
  phone_number          String?            @unique
  username              String?            @unique
  password_hash         String
  first_name            String
  last_name             String
  profile_picture       String?
  gender                Gender?
  date_of_birth         DateTime?
  language              String             @default("en")
  timezone              String             @default("UTC")
  status                UserStatus         @default(active)
  email_verified        Boolean            @default(false)
  phone_verified        Boolean            @default(false)
  last_login_at         DateTime?
  failed_login_attempts Int                @default(0)
  last_failed_login_at  DateTime?
  created_at            DateTime           @default(now())
  updated_at            DateTime           @updatedAt
  deleted_at            DateTime?
  user_permissions      UserPermission[]
  roles                 UserRole[]
  user_sessions         UserSession[]
  verifications         UserVerification[]

  @@index([uuid])
  @@index([email])
  @@index([status])
  @@index([username])
}

model UserPermission {
  id            Int        @id @default(autoincrement())
  userId       String
  permission_id Int
  granted_at    DateTime   @default(now())
  permission    Permission @relation(fields: [permission_id], references: [id])
  user          User       @relation(fields: [userId], references: [uuid])
}

model UserRole {
  id          Int      @id @default(autoincrement())
  assigned_at DateTime @default(now())
  role_id     Int
  userId     String
  role        Role     @relation(fields: [role_id], references: [id])
  user        User     @relation(fields: [userId], references: [uuid])
}

model Role {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?
  level           Int              @default(10)
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  organization_id Int?
  permissions     RolePermission[]
  users           UserRole[]
}

model Permission {
  id               Int              @id @default(autoincrement())
  name             String           @unique
  module           String
  action           String
  description      String?
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  role_permissions RolePermission[]
  user_permissions UserPermission[]

  @@unique([module, action])
}

model RolePermission {
  id            Int        @id @default(autoincrement())
  permission_id Int
  role_id       Int
  permission    Permission @relation(fields: [permission_id], references: [id])
  role          Role       @relation(fields: [role_id], references: [id])
}

model UserVerification {
  id                 Int      @id @default(autoincrement())
  userId            String
  otp                String
  otp_expiry         DateTime
  verification_token String?
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  user               User     @relation(fields: [userId], references: [uuid])
}

model UserSession {
  id           Int       @id @default(autoincrement())
  userId       String
  refreshToken String    @unique
  device       String?
  browser      String?
  ipAddress    String?
  location     String?
  isActive     Boolean   @default(true)
  loggedInAt   DateTime  @default(now())
  loggedOutAt  DateTime?
  expiresAt    DateTime
  user         User      @relation(fields: [userId], references: [uuid])

  @@index([userId])
}
model BlacklistedToken {
  id        String   @id @default(uuid())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([token])
  @@index([expiresAt])
}


enum Gender {
  male
  female
  other
}

enum UserStatus {
  active
  inactive
  suspended
  deleted
}
