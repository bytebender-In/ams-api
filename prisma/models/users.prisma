model User {
  id                    Int        @id @default(autoincrement())
  uuid                  String     @unique @default(uuid())
  email                 String     @unique
  phone_number          String?    @unique
  username              String?    @unique
  password_hash         String
  first_name            String
  last_name             String
  profile_picture       String?
  gender                Gender
  date_of_birth         DateTime?
  language              String     @default("en")
  timezone              String     @default("UTC")
  status                UserStatus @default(active)
  email_verified        Boolean    @default(false)
  phone_verified        Boolean    @default(false)
  last_login_at         DateTime?
  failed_login_attempts Int        @default(0)
  last_failed_login_at  DateTime?
  created_at            DateTime   @default(now())
  updated_at            DateTime   @updatedAt
  deleted_at            DateTime?

  role          UserRole[]
  permissions   UserPermission[]
  subscriptions Subscription[]
  verifications UserVerification[]
}

model UserPermission {
  id            Int      @id @default(autoincrement())
  user_id       Int
  permission_id Int
  granted_at    DateTime @default(now())

  user       User       @relation(fields: [user_id], references: [id])
  permission Permission @relation(fields: [permission_id], references: [id])
}

model Role {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  level         Int      @default(10)
  permissions RolePermission[]
  users       UserRole[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  organizationId Int?
  organization   Organization? @relation(fields: [organizationId], references: [id])
}

model Permission {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  module         String
  action         String
  description    String?
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  UserPermission UserPermission[]
  RolePermission RolePermission[]

  organizationId  Int?        
  organization    Organization? @relation(fields: [organizationId], references: [id])
}

model UserRole {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  role        Role     @relation(fields: [roleId], references: [id])
  roleId      Int
  assigned_at DateTime @default(now())
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int
}

model UserVerification {
  id                 Int      @id @default(autoincrement())
  user_id            Int
  otp                String
  otp_expiry         DateTime
  verification_token String?
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])
}

// Enums for gender and user status

enum Gender {
  male
  female
  other
}

enum UserStatus {
  active
  inactive
  suspended
  deleted
}
